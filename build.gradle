// Gradle-4.3.1
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven/'
        }
        maven {
            name = 'spigot'
            url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

repositories {
    jcenter()
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven/"
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'spigot'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

version = "1.7.10-1.0.1"
group = "org.soraworld.cbaubles"
archivesBaseName = "CustomBaubles"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "build/run"
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade group: "org.spongepowered", name: "mixin", version: "0.7.6-SNAPSHOT", changing: true
    compile 'org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT'
    shade files('lib/Baubles-1.7.10-1.0.2-api.jar')
    //shade 'org.spongepowered:mixin:0.7.6-SNAPSHOT'
    //compile group: 'org.spongepowered', name: 'mixin', version: '0.4.4'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
def serverRefMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.cbaubles.refmap.json"

def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${serverRefMap}"]
}

reobf {
    addExtraSrgFile mixinSrg
    reobf(jar) { spec ->
        spec.classpath = sourceSets.main.compileClasspath
    }
}

jar {
    configurations.shade.copyRecursive().setTransitive(false).each { artifact ->
        from(zipTree(artifact))
    }
    manifest {
        attributes(
                "FMLCorePluginContainsFMLMod": "true",
                "ForceLoadAsMod": "true",
                "MixinCompatibilityLevel": "JAVA_8",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": "0",
                "MixinConfigs": "mixins.cbaubles.json"
        )
    }
}
